import kotlin.math.sqrt

fun main(){
    val testVector = Vector(1.0, 2.0, 3.0);
    println("x:${testVector.x}   y:${testVector.y}   z:${testVector.z}");
    println("–î–ª–∏–Ω–∞ –≤–µ–∫—Ç–æ—Ä–∞: ${testVector.length()}");
    println("–°–∫–∞–ª—è—Ä–Ω–æ–µ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –≤–µ–∫—Ç–æ—Ä–æ–≤: ${testVector scalarOfVectors Vector(3.0, 3.0, 3.0)}");
    println("–°–∫–∞–ª—è—Ä–Ω–æ–µ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –≤–µ–∫—Ç–æ—Ä–æ–≤ —á–µ—Ä–µ–∑ * :" +
            " ${Vector(1.0, 2.0, 3.0) * Vector(3.0, 3.0, 3.0)}");
    println("–°–∫–∞–ª—è—Ä–Ω–æ–µ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –≤–µ–∫—Ç–æ—Ä–æ–≤ —á–µ—Ä–µ–∑ —Å—Ç–æ—Ä–æ–Ω–Ω—é—é —Ñ—É–Ω–∫—Ü–∏—é:" +
            " ${scalarOfVectors(Vector(1.0, 2.0, 3.0), Vector(3.0, 3.0, 3.0))}");
}


class Vector(private var _x: Double,
             private var _y: Double,
             private var _z: Double) {
    var x: Double
        get() = _x
        set(value) {_x = value}
    var y: Double
        get() = _y
        set(value) {_y = value}
    var z: Double
        get() = _z
        set(value) {_z = value}


    fun length(): Double{
        return sqrt(_x*_x + _y*_y + _z*_z);
    }

    infix fun scalarOfVectors(vector2: Vector): Double{
        return _x*vector2.x + _y*vector2.y + _z*vector2.z;
    }

    operator fun times(vector2: Vector): Double{ // –ü–µ—Ä–µ–≥—Ä—É–∑–∫–∞ *
        return _x*vector2.x + _y*vector2.y + _z*vector2.z;
    }
}

fun scalarOfVectors(vector1: Vector, vector2: Vector): Double{
    return vector1.x*vector2.x + vector1.y*vector2.y + vector1.z*vector2.z;
}

/*
–°–æ–∑–¥–∞—Ç—å –∫–ª–∞—Å—Å Vector, –∫–æ—Ç–æ—Ä—ã–π –æ–ø–∏—Å—ã–≤–∞–µ—Ç –≤–µ–∫—Ç–æ—Ä –≤ —Ç—Ä–µ—Ö–º–µ—Ä–Ω–æ–º –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ.
–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –≤ –∫–∞—á–µ—Å—Ç–≤–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã x, y, z.
–í –∫–ª–∞—Å—Å–µ —Å–æ–∑–¥–∞—Ç—å –º–µ—Ç–æ–¥—ã:
- –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –¥–ª–∏–Ω—ã –≤–µ–∫—Ç–æ—Ä–∞ (sqrt(x^2 + y^2 + z^2));

- –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è —Å–∫–∞–ª—è—Ä–Ω–æ–≥–æ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –≤–µ–∫—Ç–æ—Ä–æ–≤ ùë•1‚àóùë•2 + ùë¶1‚àóùë¶2 + ùëß1‚àóùëß2.
    –í –∫–∞—á–µ—Å—Ç–≤–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –º–µ—Ç–æ–¥ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –æ–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ Vector;

- –¥–æ–±–∞–≤–∏—Ç—å –∏–Ω—Ñ–∏–∫—Å–Ω—É—é –∑–∞–ø–∏—Å—å –º–µ–∂–¥—É –¥–≤—É–º—è –≤–µ–∫—Ç–æ—Ä–∞–º–∏ –≤ –ø—Ä–µ–¥—ã–¥—É—â–∏–π –ø—É–Ω–∫—Ç.
    –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ infix;

- –æ–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é —Å–∫–∞–ª—è—Ä–Ω–æ–≥–æ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –≤–µ–∫—Ç–æ—Ä–æ–≤, —á—Ç–æ–±—ã –≤—ã—Ä–∞–∂–µ–Ω–∏–µ
    –ø—Ä–∏–Ω—è–ª–æ –≤–∏–¥: Vector(1.0,2.0,3.0) * Vector(3.0,2.0,1.0);

- –≤–Ω–µ –∫–ª–∞—Å—Å–∞ —Å–æ–∑–¥–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é —Å–∫–∞–ª—è—Ä–Ω–æ–≥–æ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä–∞—è –≤ –∫–∞—á–µ—Å—Ç–≤–µ
    –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –¥–≤–∞ –æ–±—ä–µ–∫—Ç–∞ —Ç–∏–ø–∞ Vector.

*/